/************
Processor: ts
************/

import * as __beyond_dep_ns_0 from 'express';
// files.ts
declare namespace ns_0 {
  import Application = __beyond_dep_ns_0.Application;
  import Request = __beyond_dep_ns_0.Request;
  import IResponse = __beyond_dep_ns_0.Response;
  export class FilesRoutes {
    static setup(app: Application): void;
    static post(req: Request, res: IResponse): Promise<IResponse<any, Record<string, any>>>;
  }
}


// github.ts
declare namespace ns_1 {
  import Application = __beyond_dep_ns_0.Application;
  import Request = __beyond_dep_ns_0.Request;
  import IResponse = __beyond_dep_ns_0.Response;
  export class GitHubRoutes {
    static setup(app: Application): void;
    static concatenate(req: Request, res: IResponse): Promise<IResponse<any, Record<string, any>>>;
    static addFiles(req: Request, res: IResponse): Promise<IResponse<any, Record<string, any>>>;
  }
}


// index.ts
declare namespace ns_2 {
  import Application = __beyond_dep_ns_0.Application;
  export class Routes {
    static setup(app: Application): void;
  }
}


export import Routes = ns_2.Routes;

export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };